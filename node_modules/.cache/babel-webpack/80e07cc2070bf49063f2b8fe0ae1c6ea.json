{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../Services/database.service\";\nimport * as i2 from \"@ionic-native/device/ngx\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"../Services/core-logic.service\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/forms\";\nexport let LoginPage = /*#__PURE__*/(() => {\n  class LoginPage {\n    constructor(db, device, alertController, toastController, router, CG) {\n      this.db = db;\n      this.device = device;\n      this.alertController = alertController;\n      this.toastController = toastController;\n      this.router = router;\n      this.CG = CG;\n    }\n\n    ngOnInit() {}\n\n    GetDevice() {\n      this.AppDetail = {\n        model: this.device.model,\n        uuid: this.device.uuid\n      };\n      console.log(this.AppDetail); // alert(this.AppDetail);\n      // alert(JSON.stringify(this.AppDetail));\n\n      localStorage.setItem('AppDetail', this.AppDetail); //api/Authentication/Login\n      // alert(JSON.stringify(localStorage.getItem('AppDetail')));\n      // checkLogin() {\n\n      if (this.EmpID === '' || this.EmpID == undefined) {\n        this.CG.presentAlert('Please Enter Employee ID');\n        return false;\n      }\n\n      if (this.Password === '' || this.Password == undefined) {\n        this.CG.presentAlert('Please Enter Password');\n        return false;\n      }\n\n      let parameter = {\n        \"EmpID\": this.EmpID,\n        \"Password\": this.Password,\n        \"DomainName\": this.db.PublicDomain,\n        // \"DeviceID\": this.AppDetail.uuid+\",\"+this.AppDetail.model\n        \"DeviceID\": \"7b0c60b664653b38,CPH2015\"\n      };\n      console.log(parameter); // alert(JSON.stringify(parameter));\n\n      localStorage.setItem('para', JSON.stringify(parameter));\n      this.CG.presentLoading('Please Wait...');\n      this.db.login(parameter).subscribe(data => __awaiter(this, void 0, void 0, function* () {\n        this.CG.dismissLoading();\n        this.LoginRes = data;\n        console.log(this.LoginRes);\n        localStorage.setItem('AppTokenKey', data[0].token); //  localStorage.setItem('AppTokenKey', '5899541F117F44FDAE0B9D6CF2D154EE-1002');\n\n        console.log(localStorage.getItem('AppTokenKey'));\n\n        if (this.LoginRes[0].status == \"Approved\") {\n          const toast = yield this.toastController.create({\n            message: 'Login Successfully',\n            duration: 2000\n          });\n          toast.present(); // this.checkIn();\n\n          this.makeAttendanceCheckIN();\n          this.router.navigate([\"/tabs/tab1\"]);\n        } else if (this.LoginRes[0].status == \"Pending\") {\n          const toast = yield this.toastController.create({\n            message: `${this.LoginRes[0].message}`,\n            duration: 3000\n          });\n          toast.present(); // this.checkIn();\n\n          this.router.navigate([\"/tabs/tab1\"]);\n        } else {\n          const toast = yield this.toastController.create({\n            message: 'Your settings have been saved.',\n            duration: 2000\n          });\n          toast.present();\n        }\n      }), err => __awaiter(this, void 0, void 0, function* () {\n        this.CG.Error(err);\n        const toast = yield this.toastController.create({\n          message: 'Invalid employee code or password.',\n          duration: 2000\n        });\n        toast.present();\n      }));\n    }\n\n    resetPassword() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const alert = yield this.alertController.create({\n          header: 'Reset Password',\n          backdropDismiss: false,\n          inputs: [{\n            name: 'EmpID',\n            type: 'text',\n            placeholder: 'Enter Employee ID'\n          }],\n          buttons: [{\n            text: 'Cancel',\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: () => {\n              console.log('Confirm Cancel');\n            }\n          }, {\n            text: 'Ok',\n            handler: name => {\n              console.log('Confirm Ok', name);\n              this.resetPass(name);\n            }\n          }]\n        });\n        yield alert.present();\n      });\n    }\n\n    resetPass(name) {\n      console.log(name.EmpID);\n\n      if (!name.EmpID) {\n        this.CG.presentAlert('Please enter employee Id');\n        return false;\n      } else {\n        let para = {\n          \"empcode\": name.EmpID\n        };\n        this.db.resetPassword(para).subscribe(res => __awaiter(this, void 0, void 0, function* () {\n          console.log(res);\n\n          if (res.code == 200) {\n            const toast = yield this.toastController.create({\n              message: res.message,\n              duration: 2000\n            });\n            toast.present();\n          } else {\n            const toast = yield this.toastController.create({\n              message: 'Invalid employee ID',\n              duration: 2000\n            });\n            toast.present();\n          }\n        }), error => __awaiter(this, void 0, void 0, function* () {\n          const toast = yield this.toastController.create({\n            message: 'Invalid employee ID',\n            duration: 2000\n          });\n          toast.present();\n        }));\n      }\n    }\n\n    makeAttendanceCheckIN() {\n      this.para = JSON.parse(localStorage.getItem('para'));\n      this.db.ValidateCheckin(this.para).subscribe(res => __awaiter(this, void 0, void 0, function* () {\n        console.log(\"Check In Response: \", res);\n\n        if (res.responseCode == 2005) {\n          this.showbutton = false;\n          localStorage.setItem('showbutton', this.showbutton);\n          this.db.changeStatus(this.showbutton);\n        } else if (res.responseCode == 2003) {\n          this.showbutton = true;\n          localStorage.setItem('showbutton', this.showbutton);\n          this.db.changeStatus(this.showbutton);\n        } else if (res.responseCode == 2004) {\n          this.showbutton = true;\n          localStorage.setItem('showbutton', this.showbutton);\n          this.db.changeStatus(this.showbutton);\n        } else if (res == \"You are not allowed to make attendance with mobile\") {}\n      }), error => __awaiter(this, void 0, void 0, function* () {\n        console.log(error);\n      }));\n    }\n\n  }\n\n  LoginPage.ɵfac = function LoginPage_Factory(t) {\n    return new (t || LoginPage)(i0.ɵɵdirectiveInject(i1.DatabaseService), i0.ɵɵdirectiveInject(i2.Device), i0.ɵɵdirectiveInject(i3.AlertController), i0.ɵɵdirectiveInject(i3.ToastController), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.CoreLogicService));\n  };\n\n  LoginPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginPage,\n    selectors: [[\"app-login\"]],\n    decls: 21,\n    vars: 2,\n    consts: [[1, \"background-image\"], [1, \"studentimage\"], [\"src\", \"../../assets/image/logo.png\", 1, \"gif\"], [1, \"credential\"], [1, \"matdiv\"], [\"floatLabel\", \"auto\", \"appearance\", \"outline\", 1, \"loginform\"], [\"required\", \"\", \"matInput\", \"\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [1, \"matdiv\", \"matdivphone\"], [\"floatLabel\", \"auto\", \"appearance\", \"outline\"], [1, \"rememberdiv\"], [\"lines\", \"none\", 1, \"ionitem\", \"ion-no-margin\"], [1, \"resetpassword\", 3, \"click\"], [\"vertical\", \"end\", \"horizontal\", \"center\", 3, \"click\"], [1, \"headblue\"], [\"name\", \"arrow-forward-outline\"]],\n    template: function LoginPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-content\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelement(2, \"img\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"mat-form-field\", 5);\n        i0.ɵɵelementStart(6, \"mat-label\");\n        i0.ɵɵtext(7, \"Employee ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginPage_Template_input_ngModelChange_8_listener($event) {\n          return ctx.EmpID = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵelementStart(10, \"mat-form-field\", 8);\n        i0.ɵɵelementStart(11, \"mat-label\");\n        i0.ɵɵtext(12, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginPage_Template_input_ngModelChange_13_listener($event) {\n          return ctx.Password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 9);\n        i0.ɵɵelementStart(15, \"ion-item\", 10);\n        i0.ɵɵelementStart(16, \"ion-label\", 11);\n        i0.ɵɵlistener(\"click\", function LoginPage_Template_ion_label_click_16_listener() {\n          return ctx.resetPassword();\n        });\n        i0.ɵɵtext(17, \"Reset Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"ion-fab\", 12);\n        i0.ɵɵlistener(\"click\", function LoginPage_Template_ion_fab_click_18_listener() {\n          return ctx.GetDevice();\n        });\n        i0.ɵɵelementStart(19, \"ion-fab-button\", 13);\n        i0.ɵɵelement(20, \"ion-icon\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.EmpID);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.Password);\n      }\n    },\n    directives: [i3.IonContent, i6.MatFormField, i6.MatLabel, i7.MatInput, i8.DefaultValueAccessor, i8.RequiredValidator, i8.NgControlStatus, i8.NgModel, i3.IonItem, i3.IonLabel, i3.IonFab, i3.IonFabButton, i3.IonIcon],\n    styles: [\"*[_ngcontent-%COMP%]{font-family:Poppins-Regular}.studentimage[_ngcontent-%COMP%]{-webkit-animation:kenburns-top 5s ease-out both;animation:kenburns-top 5s ease-out both;text-align:center;margin-top:30px;height:200px}.studentimage[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:70%;margin-top:50px}@-webkit-keyframes kenburns-top{0%{transform:scale(1) translateY(0);transform-origin:50% 16%}to{transform:scale(1.25) translateY(-15px);transform-origin:top}}@keyframes kenburns-top{0%{transform:scale(1) translateY(0);transform-origin:50% 16%}to{transform:scale(1.25) translateY(-15px);transform-origin:top}}.main[_ngcontent-%COMP%]   .top[_ngcontent-%COMP%]{height:30%;width:100%}.main[_ngcontent-%COMP%]   .top[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100%;background-repeat:no-repeat;background-size:200% 200%;border-radius:0 0 60px 60px;opacity:.8}.main[_ngcontent-%COMP%]   .body[_ngcontent-%COMP%]{margin-left:5%;margin-right:5%;margin-top:-81px}.main[_ngcontent-%COMP%]   .body[_ngcontent-%COMP%]   .s-code[_ngcontent-%COMP%]{border:1px solid #d3d3d3;margin-bottom:5%;border-radius:5px}.main[_ngcontent-%COMP%]   .body[_ngcontent-%COMP%]   .s-phone[_ngcontent-%COMP%]{border:.5px solid #d3d3d3;margin-bottom:5%;border-radius:5px}.main[_ngcontent-%COMP%]   .body[_ngcontent-%COMP%]   .logo[_ngcontent-%COMP%]{height:auto;margin:auto;width:30%;text-align:center}.main[_ngcontent-%COMP%]   .body[_ngcontent-%COMP%]   .logo[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{border-radius:100px}.main[_ngcontent-%COMP%]   .body[_ngcontent-%COMP%]   .welcome[_ngcontent-%COMP%]{text-align:center;color:#d3d3d3}.main[_ngcontent-%COMP%]   .btnSubmit[_ngcontent-%COMP%]{margin-left:5%;margin-right:5%}.main[_ngcontent-%COMP%]   ion-button[_ngcontent-%COMP%]{color:#fff;height:42px;--border-radius:5px!important;font-weight:700;--box-shadow:none}.text-danger[_ngcontent-%COMP%]{color:red!important}.pop-alert-confirmation[_ngcontent-%COMP%]{text-align:justify}mat-form-field[_ngcontent-%COMP%]{width:82%}.logodiv[_ngcontent-%COMP%]{position:absolute;margin-top:-49px;margin-left:127px}.credential[_ngcontent-%COMP%]{margin-top:40px}@-webkit-keyframes rotate-scale-down{0%{transform:scale(1) rotate(0)}50%{transform:scale(.5) rotate(180deg)}to{transform:scale(1) rotate(1turn)}}@keyframes rotate-scale-down{0%{transform:scale(1) rotate(0)}50%{transform:scale(.5) rotate(180deg)}to{transform:scale(1) rotate(1turn)}}.welcome[_ngcontent-%COMP%]{color:#d7d8da;text-align:center;font-size:24px;font-weight:700}.dypatillogo[_ngcontent-%COMP%]{margin-top:16px;text-align:center}@-webkit-keyframes rotate-scale-up{0%{transform:scale(1) rotate(0)}50%{transform:scale(2) rotate(180deg)}to{transform:scale(1) rotate(1turn)}}@keyframes rotate-scale-up{0%{transform:scale(1) rotate(0)}50%{transform:scale(2) rotate(180deg)}to{transform:scale(1) rotate(1turn)}}ion-item[_ngcontent-%COMP%]{margin:12px}ion-input[_ngcontent-%COMP%], ion-item[_ngcontent-%COMP%]   ion-label[_ngcontent-%COMP%]{color:gray}ion-input[_ngcontent-%COMP%]{font-size:18px;--padding-bottom:26px}ion-fab[_ngcontent-%COMP%]{-webkit-animation:bounce-top 3s cubic-bezier(.165,.84,.44,1) both;animation:bounce-top 3s cubic-bezier(.165,.84,.44,1) both}@-webkit-keyframes bounce-top{0%{transform:translateY(-45px);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in;opacity:1}24%{opacity:1}40%{transform:translateY(-24px);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}65%{transform:translateY(-12px);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}82%{transform:translateY(-6px);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}93%{transform:translateY(-4px);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}25%,55%,75%,87%{transform:translateY(0);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}to{transform:translateY(0);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;opacity:1}}@keyframes bounce-top{0%{transform:translateY(-45px);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in;opacity:1}24%{opacity:1}40%{transform:translateY(-24px);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}65%{transform:translateY(-12px);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}82%{transform:translateY(-6px);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}93%{transform:translateY(-4px);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}25%,55%,75%,87%{transform:translateY(0);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}to{transform:translateY(0);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;opacity:1}}.logo[_ngcontent-%COMP%]{text-align:center}.isssss[_ngcontent-%COMP%]{width:70%}ion-icon[_ngcontent-%COMP%]{color:#fff;font-size:25px;margin-right:8%}.matdiv[_ngcontent-%COMP%]{text-align:center}ion-card[_ngcontent-%COMP%]{--background:#f5deb300}ion-card[_ngcontent-%COMP%]   ion-item[_ngcontent-%COMP%]{margin:22px 30px 22px 22px;--background:#ffffff00;border:1px solid #fff;border-radius:50px;padding:7px}ion-card[_ngcontent-%COMP%]   ion-item[_ngcontent-%COMP%]   ion-label[_ngcontent-%COMP%]{color:#fff}.rememberdiv[_ngcontent-%COMP%]   ion-item[_ngcontent-%COMP%]{--background:#ffffff00;width:67%;margin-left:6%}.matdivphone[_ngcontent-%COMP%]{margin-bottom:-12px}.mat-form-field.mat-form-field-invalid[_ngcontent-%COMP%]   .mat-form-field-label[_ngcontent-%COMP%]{color:#f44336;margin-top:-14px}.mat-form-field-invalid[_ngcontent-%COMP%]   .mat-input-element[_ngcontent-%COMP%], .mat-form-field.mat-warn[_ngcontent-%COMP%]   .mat-input-element[_ngcontent-%COMP%]{caret-color:#f44336;margin-top:7px}.resetpassword[_ngcontent-%COMP%]{float:right}\"]\n  });\n  return LoginPage;\n})();","map":{"version":3,"sources":["/home/arvind/Desktop/Ionic/HRMS_PLUS/src/app/login/login.page.ts","/home/arvind/Desktop/Ionic/HRMS_PLUS/src/app/login/login.page.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CoreLogicService } from '../Services/core-logic.service';\nimport { DatabaseService } from '../Services/database.service';\nimport { ToastController, AlertController } from '@ionic/angular';\nimport { Device } from '@ionic-native/device/ngx';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  EmpID: any;\n  Password: any;\n  AppDetail:any;\n  // AppDetail = {\n  //   model: '',\n  //   uuid: ''\n  // }\n  DeviceDetail: any;\n  LoginRes: any;\n  showbutton: any;\n  para: any;\n  constructor(private db: DatabaseService,\n    private device: Device,\n    private alertController: AlertController,\n    private toastController: ToastController, private router:Router,private CG: CoreLogicService) { }\n\n  ngOnInit() {\n  }\n  GetDevice() {\n    this.AppDetail = {\n      model: this.device.model,\n      uuid: this.device.uuid\n    }\n    console.log(this.AppDetail);\n    // alert(this.AppDetail);\n    // alert(JSON.stringify(this.AppDetail));\n\n\n    localStorage.setItem('AppDetail',this.AppDetail);\n  //api/Authentication/Login\n  // alert(JSON.stringify(localStorage.getItem('AppDetail')));\n\n\n  // checkLogin() {\n\n    if (this.EmpID === '' || this.EmpID == undefined) {\n      this.CG.presentAlert('Please Enter Employee ID');\n      return false;\n    }\n    if (this.Password === '' || this.Password == undefined) {\n      this.CG.presentAlert('Please Enter Password');\n      return false;\n    }\n    let parameter={\n      \"EmpID\": this.EmpID,\n      \"Password\": this.Password,\n      \"DomainName\":this.db.PublicDomain,\n      // \"DeviceID\": this.AppDetail.uuid+\",\"+this.AppDetail.model\n      \"DeviceID\": \"7b0c60b664653b38,CPH2015\"\n  }\n  console.log(parameter);\n  // alert(JSON.stringify(parameter));\n  localStorage.setItem('para', JSON.stringify(parameter));\n    this.CG.presentLoading('Please Wait...');\n    this.db.login(parameter).subscribe(async (data) => {\n      this.CG.dismissLoading();\n     \n      this.LoginRes = data as any;\n      console.log(this.LoginRes);\n     localStorage.setItem('AppTokenKey', data[0].token);\n    //  localStorage.setItem('AppTokenKey', '5899541F117F44FDAE0B9D6CF2D154EE-1002');\n     \n      console.log(localStorage.getItem('AppTokenKey'));\n      if( this.LoginRes[0].status == \"Approved\") {\n        const toast = await this.toastController.create({\n          message: 'Login Successfully',\n          duration: 2000\n        });\n        toast.present();\n        // this.checkIn();\n        this.makeAttendanceCheckIN();\n        this.router.navigate([\"/tabs/tab1\"]);\n      }\n      else if( this.LoginRes[0].status == \"Pending\") {\n        const toast = await this.toastController.create({\n          message: `${this.LoginRes[0].message}`,\n          duration: 3000\n        });\n        toast.present();\n        // this.checkIn();\n        this.router.navigate([\"/tabs/tab1\"]);\n      }\n      else {\n        const toast = await this.toastController.create({\n          message: 'Your settings have been saved.',\n          duration: 2000\n        });\n        toast.present();\n      }\n\n    },async (err)=>{\n      this.CG.Error(err);\n      const toast = await this.toastController.create({\n        message: 'Invalid employee code or password.',\n        duration: 2000\n      });\n      toast.present();\n    });\n  }\n  \n  async resetPassword() {\n    const alert = await this.alertController.create({\n      header: 'Reset Password',\n      backdropDismiss: false,\n      inputs: [\n        {\n          name: 'EmpID',\n          type: 'text',\n          placeholder: 'Enter Employee ID'\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel');\n\n          }\n        }, {\n          text: 'Ok',\n          handler: (name) => {\n            console.log('Confirm Ok', name);\n            \n            this.resetPass(name);\n\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  resetPass(name) {\n    console.log(name.EmpID);\n    if(!name.EmpID) {\n      this.CG.presentAlert('Please enter employee Id');\n      return false;\n    }\n    else {\n      let para = {\n        \"empcode\": name.EmpID\n      }\n      this.db.resetPassword(para).subscribe(async res => {\n        console.log(res);\n        if(res.code == 200) {\n          const toast = await this.toastController.create({\n            message: res.message,\n            duration: 2000\n          });\n          toast.present();\n        }\n        else {\n          const toast = await this.toastController.create({\n            message: 'Invalid employee ID',\n            duration: 2000\n          });\n          toast.present();\n        }\n      }, \n      async error => {\n        const toast = await this.toastController.create({\n          message: 'Invalid employee ID',\n          duration: 2000\n        });\n        toast.present();\n      })\n    }\n    \n  }\n\n  makeAttendanceCheckIN() {\n    this.para = JSON.parse(localStorage.getItem('para'));\n   this.db.ValidateCheckin(this.para).subscribe(async res => {\n     console.log(\"Check In Response: \",res);\n     if(res.responseCode == 2005) {\n       this.showbutton= false;\n       localStorage.setItem('showbutton', this.showbutton)\n       this.db.changeStatus(this.showbutton);\n     }\n     else if(res.responseCode == 2003) {\n       this.showbutton=true;\n       localStorage.setItem('showbutton', this.showbutton)\n       this.db.changeStatus(this.showbutton);\n     }\n     \n     else if(res.responseCode == 2004) {\n       this.showbutton= true;\n       localStorage.setItem('showbutton', this.showbutton)\n       this.db.changeStatus(this.showbutton);\n     }\n     else if(res == \"You are not allowed to make attendance with mobile\"){\n     \n     }\n   },\n   async error => {\n     console.log(error);\n     \n   })\n }\n}","<!-- <img src=\"../../../assets/dypatil.png\" alt=\"No-Image\" /> -->\n<ion-content class=\"background-image\">\n    <!-- <div class=\"top\"><img src=\"../../assets/image/collegeclass.jpg\"></div> -->\n    <!-- <div class=\"maindiv\"></div> -->\n    <!-- <div class=\"dypatillogo\"><img class=\"isssss\" src=\"../../assets/icon/dylogo.png\" alt=\"No-Image\" /></div> -->\n    <!-- <h2 class=\"welcome\">welcome</h2> -->\n    <!-- <img src=\"../../assets/image/Welcome.gif\"> -->\n    <!-- <div class=\"logo\"><img class=\"imagessssssss\" src=\"../../assets/image/collegeclassgreen.jpg\" alt=\"No-Image\" /></div> -->\n    <div class=\"studentimage\"><img class=\"gif\" src=\"../../assets/image/logo.png\"></div>\n    <div class=\"credential\">\n\n\n\n        <div class=\"matdiv\">\n            <mat-form-field floatLabel=\"auto\" appearance=\"outline\" class=\"loginform\">\n                <mat-label>Employee ID</mat-label>\n                <input [(ngModel)]=\"EmpID\" required matInput required>\n                <!-- <mat-icon  matSuffix>perm_identity</mat-icon> -->\n\n            </mat-form-field>\n        </div>\n        <div class=\"matdiv matdivphone\">\n            <mat-form-field floatLabel=\"auto\" appearance=\"outline\">\n                <mat-label>Password</mat-label>\n                <input [(ngModel)]=\"Password\" required matInput required>\n                <!-- <mat-icon matSuffix>settings_phone</mat-icon> -->\n\n            </mat-form-field>\n        </div>\n\n\n\n\n\n\n        <div class=\"rememberdiv\">\n            <ion-item class=\"ionitem ion-no-margin\" lines=\"none\">\n                <ion-label class=\"resetpassword\" (click)=\"resetPassword()\">Reset Password</ion-label>\n                <!-- <ion-checkbox slot=\"end\" [(ngModel)]=\"chb_Remember\"></ion-checkbox> -->\n            </ion-item>\n        </div>\n\n        <!-- <div class=\"reset-pass\">\n            <p>Please enter Employee Id</p>\n        </div> -->\n\n    </div>\n\n    <ion-fab vertical=\"end\" horizontal=\"center\" (click)=\"GetDevice()\">\n        <ion-fab-button class=\"headblue\">\n            <ion-icon name=\"arrow-forward-outline\"></ion-icon>\n        </ion-fab-button>\n    </ion-fab>\n</ion-content>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}