{"ast":null,"code":"import { Subject, BehaviorSubject } from 'rxjs';\nimport { HttpHeaders } from '@angular/common/http';\nimport { catchError, retry } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let DatabaseService = /*#__PURE__*/(() => {\n  class DatabaseService {\n    constructor(http) {\n      this.http = http;\n      this.subject = new Subject();\n      this.profileData = new Subject();\n      this.isCheckIN = new BehaviorSubject(null);\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/x-www-form-urlencoded',\n          Authorization: 'Basic ' + localStorage.getItem('AppTokenKey')\n        })\n      };\n      this.httpOptions1 = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      console.log('API Token Key: ', localStorage.getItem('AppTokenKey'));\n      this.WebAPI = 'https://api.hrmsplus.in/api/';\n      this.PublicDomain = 'hrms.bigapollospectra.com'; // this.PublicDomain='localhost';\n    }\n\n    sendMenues(menu) {\n      console.log(menu);\n      this.subject.next(menu);\n    }\n\n    getMenues() {\n      return this.subject.asObservable();\n    }\n\n    sendProfile(profile) {\n      console.log(profile);\n      this.profileData.next(profile);\n    }\n\n    getProfile() {\n      return this.profileData.asObservable();\n    }\n\n    changeStatus(status) {\n      console.log(status);\n      this.isCheckIN.next(status);\n    }\n\n    getChangeStatus() {\n      return this.isCheckIN.asObservable();\n    } // isAlreadyLogin(param: any) {\n    //   const res = this.http.post(this.WebAPI + 'Authentication/isAlreadyLogin', param);\n    //   return res;\n    // }\n\n\n    login(param) {\n      const res = this.http.post(this.WebAPI + 'Authentication/Login', param, this.httpOptions1);\n      return res;\n    } //https://api.hrmsplus.in/api/Employee/Profile?EmployeeCode=1002&DomainName=localhost&Token=B95AD3699D7D49308EA7838EEB988D34-1002\n\n\n    getProfileData(param) {\n      const res = this.http.get(this.WebAPI + `Employee/Profile?EmployeeCode=${param.EmpID}&DomainName=${this.PublicDomain}&Token=${localStorage.getItem('AppTokenKey')}`);\n      return res;\n    }\n\n    checkIn(param) {\n      const res = this.http.get(this.WebAPI + `Attendance/ValidateDevice?EmployeeCode=${param.EmpID}&DomainName=${this.PublicDomain}&Token=${localStorage.getItem('AppTokenKey')}`);\n      return res;\n    }\n\n    GetLocation(param) {\n      const res = this.http.get(this.WebAPI + `Employee/GetLocation?EmployeeCode=${param.EmpID}&DomainName=${this.PublicDomain}&Token=${localStorage.getItem('AppTokenKey')}`);\n      return res;\n    }\n\n    ValidateCheckin(param) {\n      const res = this.http.get(this.WebAPI + `Attendance/ValidateCheckin?EmployeeCode=${param.EmpID}&DomainName=${this.PublicDomain}&Token=${localStorage.getItem('AppTokenKey')}`);\n      return res;\n    }\n\n    CheckoutApi(param) {\n      const res = this.http.get(this.WebAPI + `Attendance/Checkout?EmployeeCode=${param.EmpID}&DomainName=${this.PublicDomain}&Token=${localStorage.getItem('AppTokenKey')}&AttendanceID=${localStorage.getItem('AttendanceID')}`);\n      return res;\n    }\n\n    createAttendance(param) {\n      const res = this.http.post(this.WebAPI + 'Attendance/Create', param, this.httpOptions1);\n      return res;\n    }\n\n    OTPVarification(handler) {\n      const res1 = this.http.post(this.WebAPI + 'Authentication/CheckOTP', handler);\n      return res1;\n    }\n\n    resetPassword(param) {\n      const res = this.http.get(this.WebAPI + `Authentication/ResetPassword?empcode=${param.empcode}&DomainName=${this.PublicDomain}`);\n      return res;\n    }\n\n    attendanceList(param) {\n      const res = this.http.get(this.WebAPI + `Attendance/List?empcode=${param.empcode}&domainname=${this.PublicDomain}&startdate=${param.startdate}&enddate=${param.enddate}`);\n      return res;\n    }\n\n    GetHeader() {\n      this.headers = new HttpHeaders(); // alert(localStorage.getItem('AppTokenKey'));\n\n      this.headers = this.headers.append('Authorization', 'Basic ' + localStorage.getItem('AppTokenKey'));\n      this.headers = this.headers.append('Accept', 'application/json');\n      this.headers = this.headers.append('Content-Type', 'application/x-www-form-urlencoded'); // this.headers = this.headers.append('AppDomain ', 'ZWxlYXJuLnZpamF5c3R1ZHljaXJjbGUuY29t');\n    }\n\n    examlist() {\n      this.GetHeader();\n      return this.http.get(this.WebAPI + 'Examination/ExamList', {\n        headers: this.headers\n      });\n    }\n\n    liveclasses() {\n      this.GetHeader();\n      return this.http.get(this.WebAPI + 'LiveClasses/GetLiveClass', {\n        headers: this.headers\n      });\n    }\n\n    assignment() {\n      this.GetHeader();\n      return this.http.get(this.WebAPI + 'Assignment/List', {\n        headers: this.headers\n      });\n    }\n\n    fee() {\n      this.GetHeader();\n      return this.http.get(this.WebAPI + 'LiveClasses/GetLiveClass', {\n        headers: this.headers\n      });\n    }\n\n    studymaterial() {\n      this.GetHeader();\n      return this.http.get(this.WebAPI + 'Assignment/StudyMaterial', {\n        headers: this.headers\n      });\n    }\n\n    vidoclass() {\n      this.GetHeader();\n      return this.http.get(this.WebAPI + 'Assignment/VideoClasses', {\n        headers: this.headers\n      });\n    }\n\n    examresult() {\n      this.GetHeader();\n      return this.http.get(this.WebAPI + 'Examination/GetResultSummry', {\n        headers: this.headers\n      });\n    }\n\n    profile() {\n      this.GetHeader();\n      const res1 = this.http.get(this.WebAPI + 'Student/Profile', {\n        headers: this.headers\n      });\n      return res1;\n    }\n\n    menuList() {\n      this.GetHeader();\n      const res1 = this.http.get(this.WebAPI + 'Apps/Menus', {\n        headers: this.headers\n      });\n      return res1;\n    }\n\n    examEnroll(param) {\n      this.GetHeader();\n      const res = this.http.post(this.WebAPI + 'Examination/Enroll', param, {\n        headers: this.headers\n      });\n      return res;\n    }\n\n    makeAttendance(param) {\n      this.GetHeader();\n      const res = this.http.post(this.WebAPI + 'LiveClasses/MakeAttendance', param, {\n        headers: this.headers\n      });\n      return res;\n    }\n\n    examquestion() {\n      this.GetHeader();\n      var param = {\n        enroll_id: localStorage.getItem('enroll_id')\n      };\n      const res = this.http.get(this.WebAPI + 'Examination/QuestionList', {\n        headers: this.headers,\n        params: param\n      });\n      return res;\n    }\n\n    AnswerSubmit(param) {\n      this.GetHeader();\n      return this.http.post(this.WebAPI + 'Examination/SubmitAnswer', param, {\n        headers: this.headers\n      });\n    }\n\n    PhotoAnswerSubmit(param) {\n      this.GetHeader();\n      return this.http.post(this.WebAPI + 'Examination/SubmitSinglePhotoAnswer', param, {\n        headers: this.headers\n      });\n    }\n\n    PhotoAnswerRemove(param) {\n      this.GetHeader();\n      return this.http.post(this.WebAPI + 'Examination/RemoveSinglePhotoAnswer', param, {\n        headers: this.headers\n      });\n    }\n\n    PreviewQuestion(_param) {\n      this.GetHeader();\n      const res1 = this.http.get(this.WebAPI + 'Examination/PreviewQuestionList', {\n        headers: this.headers,\n        params: _param\n      });\n      return res1;\n    }\n\n    PreviewQuestion_Photo(_param) {\n      this.GetHeader();\n      const res1 = this.http.get(this.WebAPI + 'Examination/PreviewPhotoQuestionList', {\n        headers: this.headers,\n        params: _param\n      });\n      return res1;\n    }\n\n    ExamSubmit(_param) {\n      this.GetHeader();\n      const res1 = this.http.get(this.WebAPI + 'Examination/ExamSubmit', {\n        headers: this.headers,\n        params: _param\n      });\n      return res1;\n    }\n\n    GetSubmitedAnswer(_param) {\n      this.GetHeader();\n      const res1 = this.http.get(this.WebAPI + 'Examination/GetSubmitedAnswer', {\n        headers: this.headers,\n        params: _param\n      });\n      return res1;\n    }\n\n    GetSetting() {\n      this.GetHeader();\n      const res = this.http.get(this.WebAPI + 'School/GetSetting', {\n        headers: this.headers\n      });\n      return res;\n    }\n\n    GetSMSBox() {\n      this.GetHeader();\n      const res = this.http.get(this.WebAPI + 'School/GetSMS', {\n        headers: this.headers\n      });\n      return res;\n    }\n\n    SetSMSRead(param) {\n      this.GetHeader();\n      return this.http.post(this.WebAPI + 'School/SetSMSRead', param, {\n        headers: this.headers\n      });\n    }\n\n    GetDemandList() {\n      this.GetHeader();\n      const res = this.http.get(this.WebAPI + 'Demand/DemandList', {\n        headers: this.headers\n      });\n      return res;\n    }\n\n    GetDemandDetail(_param) {\n      this.GetHeader();\n      const res = this.http.get(this.WebAPI + 'Demand/DemandDetail', {\n        headers: this.headers,\n        params: _param\n      });\n      return res;\n    }\n\n    CreateDemandTrans(_param) {\n      this.GetHeader();\n      const res = this.http.get(this.WebAPI + 'Demand/CreateDemandTrans', {\n        headers: this.headers,\n        params: _param\n      });\n      return res;\n    } ///////////////////\n\n\n    studentProfile(data) {\n      return this.http.get(this.WebAPI + 'Student/Profile', this.httpOptions).pipe(retry(0), catchError(this.handleError));\n    }\n\n    handleError(handleError) {\n      throw new Error('Method not implemented.');\n    }\n\n  }\n\n  DatabaseService.ɵfac = function DatabaseService_Factory(t) {\n    return new (t || DatabaseService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  DatabaseService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DatabaseService,\n    factory: DatabaseService.ɵfac,\n    providedIn: 'root'\n  });\n  return DatabaseService;\n})();","map":{"version":3,"sources":["/home/arvind/Desktop/Ionic/HRMS_PLUS/src/app/Services/database.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, Subject, BehaviorSubject } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Demaindetail } from '../demaindetail';\nimport { catchError, retry } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseService {\n  WebAPI: string;\n  profiles: any;\n  headers: any;\n\n  param: any;\n  sidemenu:any;\n  private subject = new Subject<any>();\n  private profileData = new Subject<any>();\n  private isCheckIN = new BehaviorSubject<any>(null);\n  PublicDomain: any;\n  constructor(private http: HttpClient) {\n    console.log('API Token Key: ',localStorage.getItem('AppTokenKey'));\n    this.WebAPI = 'https://api.hrmsplus.in/api/'\n    this.PublicDomain='hrms.bigapollospectra.com';\n    // this.PublicDomain='localhost';\n   }\n  sendMenues(menu: any) {\n    console.log(menu);\n    this.subject.next(menu);\n}\n  getMenues(): Observable<any> {\n    return this.subject.asObservable();\n}\nsendProfile(profile: any) {\n  console.log(profile);\n  this.profileData.next(profile);\n}\ngetProfile(): Observable<any> {\n  return this.profileData.asObservable();\n}\n\nchangeStatus(status: any) {\n  console.log(status);\n  this.isCheckIN.next(status);\n}\n\ngetChangeStatus(): Observable<any> {\n  return this.isCheckIN.asObservable();\n}\n  // isAlreadyLogin(param: any) {\n  //   const res = this.http.post(this.WebAPI + 'Authentication/isAlreadyLogin', param);\n  //   return res;\n  // }\n\n  login(param: any): Observable<any> {\n    const res = this.http.post(this.WebAPI + 'Authentication/Login', param, this.httpOptions1);\n    return res;\n  }\n  //https://api.hrmsplus.in/api/Employee/Profile?EmployeeCode=1002&DomainName=localhost&Token=B95AD3699D7D49308EA7838EEB988D34-1002\n\n  getProfileData(param: any): Observable<any> {\n    const res = this.http.get(this.WebAPI + `Employee/Profile?EmployeeCode=${param.EmpID}&DomainName=${this.PublicDomain}&Token=${localStorage.getItem('AppTokenKey')}`);\n    return res;\n  }\n\n  checkIn(param: any): Observable<any> {\n    const res = this.http.get(this.WebAPI + `Attendance/ValidateDevice?EmployeeCode=${param.EmpID}&DomainName=${this.PublicDomain}&Token=${localStorage.getItem('AppTokenKey')}`);\n    return res;\n  }\n\n  GetLocation(param: any): Observable<any> {\n    const res = this.http.get(this.WebAPI + `Employee/GetLocation?EmployeeCode=${param.EmpID}&DomainName=${this.PublicDomain}&Token=${localStorage.getItem('AppTokenKey')}`);\n    return res;\n  }\n  ValidateCheckin(param: any): Observable<any> {\n    const res = this.http.get(this.WebAPI + `Attendance/ValidateCheckin?EmployeeCode=${param.EmpID}&DomainName=${this.PublicDomain}&Token=${localStorage.getItem('AppTokenKey')}`);\n    return res;\n  }\n\n  CheckoutApi(param: any): Observable<any> {\n    const res = this.http.get(this.WebAPI + `Attendance/Checkout?EmployeeCode=${param.EmpID}&DomainName=${this.PublicDomain}&Token=${localStorage.getItem('AppTokenKey')}&AttendanceID=${localStorage.getItem('AttendanceID')}`);\n    return res;\n  }\n  createAttendance(param: any): Observable<any> {\n    const res = this.http.post(this.WebAPI + 'Attendance/Create', param, this.httpOptions1);\n    return res;\n  }\n \n  OTPVarification(handler: any): Observable<any> {\n    const res1 = this.http.post(this.WebAPI + 'Authentication/CheckOTP', handler);\n    return res1;\n  }\n\n  resetPassword(param: any): Observable<any> {\n    const res = this.http.get(this.WebAPI + `Authentication/ResetPassword?empcode=${param.empcode}&DomainName=${this.PublicDomain}`);\n    return res;\n  }\n\n  attendanceList(param: any): Observable<any> {\n    const res = this.http.get(this.WebAPI + `Attendance/List?empcode=${param.empcode}&domainname=${this.PublicDomain}&startdate=${param.startdate}&enddate=${param.enddate}`);\n    return res;\n  }\n\n\n  GetHeader() {\n    this.headers = new HttpHeaders();\n    // alert(localStorage.getItem('AppTokenKey'));\n    this.headers = this.headers.append('Authorization', 'Basic ' + localStorage.getItem('AppTokenKey'));\n    this.headers = this.headers.append('Accept', 'application/json');\n    this.headers = this.headers.append('Content-Type', 'application/x-www-form-urlencoded');\n    // this.headers = this.headers.append('AppDomain ', 'ZWxlYXJuLnZpamF5c3R1ZHljaXJjbGUuY29t');\n  }\n\n\n\n\n\n  examlist(): Observable<any> {\n    this.GetHeader();\n    return this.http.get(this.WebAPI + 'Examination/ExamList', { headers: this.headers });\n  }\n  liveclasses(): Observable<any> {\n    this.GetHeader();\n    return this.http.get(this.WebAPI + 'LiveClasses/GetLiveClass', { headers: this.headers });\n  }\n  assignment(): Observable<any> {\n    this.GetHeader();\n    return this.http.get(this.WebAPI + 'Assignment/List', { headers: this.headers });\n  }\n  fee(): Observable<any> {\n    this.GetHeader();\n    return this.http.get(this.WebAPI + 'LiveClasses/GetLiveClass', { headers: this.headers });\n  }\n  studymaterial(): Observable<any> {\n    this.GetHeader();\n    return this.http.get(this.WebAPI + 'Assignment/StudyMaterial', { headers: this.headers });\n  }\n  vidoclass(): Observable<any> {\n    this.GetHeader();\n    return this.http.get(this.WebAPI + 'Assignment/VideoClasses', { headers: this.headers });\n  }\n  examresult(): Observable<any> {\n    this.GetHeader();\n    return this.http.get(this.WebAPI + 'Examination/GetResultSummry', { headers: this.headers });\n  }\n  profile(): Observable<any> {\n    this.GetHeader();\n    const res1 = this.http.get(this.WebAPI + 'Student/Profile', { headers: this.headers });\n    return res1;\n  }\n  menuList(): Observable<any> {\n    this.GetHeader();\n    const res1 = this.http.get(this.WebAPI + 'Apps/Menus', { headers: this.headers });\n    return res1;\n  }\n  examEnroll(param: any): Observable<any> {\n    this.GetHeader();\n    const res = this.http.post(this.WebAPI + 'Examination/Enroll', param, { headers: this.headers });\n    return res;\n  }\n  makeAttendance(param: any): Observable<any> {\n    this.GetHeader();\n    const res = this.http.post(this.WebAPI + 'LiveClasses/MakeAttendance', param, { headers: this.headers });\n    return res;\n  }\n  examquestion(): Observable<any> {\n    this.GetHeader();\n    var param = {\n      enroll_id: localStorage.getItem('enroll_id')\n    }\n    const res = this.http.get(this.WebAPI + 'Examination/QuestionList', { headers: this.headers, params: param });\n    return res;\n  }\n  AnswerSubmit(param) {\n    this.GetHeader();\n    return this.http.post(this.WebAPI + 'Examination/SubmitAnswer', param, { headers: this.headers });\n  }\n  PhotoAnswerSubmit(param) {\n    this.GetHeader();\n    return this.http.post(this.WebAPI + 'Examination/SubmitSinglePhotoAnswer', param, { headers: this.headers });\n  }\n  PhotoAnswerRemove(param) {\n    this.GetHeader();\n    return this.http.post(this.WebAPI + 'Examination/RemoveSinglePhotoAnswer', param, { headers: this.headers });\n  }\n  PreviewQuestion(_param): Observable<any> {\n    this.GetHeader();\n    const res1 = this.http.get(this.WebAPI + 'Examination/PreviewQuestionList', { headers: this.headers, params: _param });\n    return res1;\n  }\n  PreviewQuestion_Photo(_param): Observable<any> {\n    this.GetHeader();\n    const res1 = this.http.get(this.WebAPI + 'Examination/PreviewPhotoQuestionList', { headers: this.headers, params: _param });\n    return res1;\n  }\n  ExamSubmit(_param): Observable<any> {\n    this.GetHeader();\n    const res1 = this.http.get(this.WebAPI + 'Examination/ExamSubmit', { headers: this.headers, params: _param });\n    return res1;\n  }\n  GetSubmitedAnswer(_param): Observable<any> {\n    this.GetHeader();\n    const res1 = this.http.get(this.WebAPI + 'Examination/GetSubmitedAnswer', { headers: this.headers, params: _param });\n    return res1;\n  }\n  GetSetting(){\n    this.GetHeader();\n    const res = this.http.get(this.WebAPI + 'School/GetSetting', { headers: this.headers})\n    return res;\n  }\n  GetSMSBox(){\n    this.GetHeader();\n    const res = this.http.get(this.WebAPI + 'School/GetSMS', { headers: this.headers})\n    return res;\n  }\n  SetSMSRead(param) {\n    this.GetHeader();\n    return this.http.post(this.WebAPI + 'School/SetSMSRead', param, { headers: this.headers });\n  }\n  GetDemandList(){\n    this.GetHeader();\n    const res = this.http.get(this.WebAPI + 'Demand/DemandList', { headers: this.headers})\n    return res;\n  }\n  GetDemandDetail(_param): Observable<Demaindetail[]>{\n    this.GetHeader();\n    const res = this.http.get<Demaindetail[]>(this.WebAPI + 'Demand/DemandDetail', { headers: this.headers,params: _param})\n    return res;\n  }\n  CreateDemandTrans(_param){\n    this.GetHeader();\n    const res = this.http.get(this.WebAPI + 'Demand/CreateDemandTrans', { headers: this.headers,params: _param})\n    return res;\n  }\n\n\n  ///////////////////\n  studentProfile(data: any): Observable<any> {\n    return this.http.get<any>(this.WebAPI + 'Student/Profile',  this.httpOptions)\n    .pipe(retry(0), catchError(this.handleError))\n  }\n  \n\n  handleError(handleError: any): import(\"rxjs\").OperatorFunction<any, any> {\n    throw new Error('Method not implemented.');\n  }\n\n  httpOptions = {\n    headers: new HttpHeaders({ \n      'Content-Type': 'application/x-www-form-urlencoded', \n      Authorization: 'Basic ' + localStorage.getItem('AppTokenKey')\n     })\n   };\n   httpOptions1 = {\n    headers: new HttpHeaders({ \n      'Content-Type': 'application/json'\n     })\n   };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}