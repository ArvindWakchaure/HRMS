{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@angular/router\";\nexport let CoreLogicService = /*#__PURE__*/(() => {\n  class CoreLogicService {\n    constructor(alertController, loadingController, router) {\n      this.alertController = alertController;\n      this.loadingController = loadingController;\n      this.router = router;\n      this.isLoading = false;\n      this.CurrentVestion = 6;\n    }\n\n    presentAlert(msg_Message) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const alert = yield this.alertController.create({\n          cssClass: 'my-custom-class',\n          header: '',\n          subHeader: '',\n          message: msg_Message,\n          buttons: ['OK']\n        });\n        yield alert.present();\n      });\n    }\n\n    Logout() {\n      /*   ALL Existing Session / Cookies Name\n        1. login_mobile --- (Login Page)\n        2. login_studcode -- (Login Page)\n        3. AppTokenKey,\n        4. enroll_id,\n        5. examduration\n      */\n      // localStorage.clear(); // Clear All Exitsting Session\n      localStorage.removeItem('AppTokenKey');\n      localStorage.removeItem('enroll_id');\n      localStorage.removeItem('examduration');\n      localStorage.removeItem('errorMessage'); // localStorage.removeItem('checkedoutOn');\n      // localStorage.removeItem('checkedinOn');\n\n      this.router.navigate(['/login']);\n    }\n\n    presentAlertConfirm(Message) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const alert = yield this.alertController.create({\n          cssClass: 'my-custom-class',\n          header: 'Confirm!',\n          message: Message,\n          buttons: [{\n            text: 'No',\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: blah => {\n              console.log('Yes', blah);\n            }\n          }, {\n            text: 'Yes',\n            handler: res => {\n              console.log('Yes', res);\n            }\n          }]\n        });\n        yield alert.present();\n      });\n    }\n\n    presentLoading(msg_Message) {\n      return __awaiter(this, void 0, void 0, function* () {\n        // const loading = await this.loadingController.create({\n        //   cssClass: 'my-custom-class',\n        //   message: msg_Message,\n        //   duration: 10000\n        // });\n        // await loading.present();\n        this.isLoading = true;\n        return yield this.loadingController.create({\n          duration: 10000,\n          message: msg_Message\n        }).then(a => {\n          a.present().then(() => {\n            console.log('presented');\n\n            if (!this.isLoading) {\n              a.dismiss().then(() => console.log('abort presenting'));\n            }\n          });\n        });\n      });\n    }\n\n    dismissLoading() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.isLoading = false;\n        const loading = yield this.loadingController.dismiss().then(() => console.log('dismissed')); // await this.loadingController.dismiss();\n      });\n    }\n\n    Error(err) {\n      this.dismissLoading();\n\n      if (err.status === 401) {\n        localStorage.removeItem('AppTokenKey');\n        localStorage.removeItem('enroll_id');\n        localStorage.removeItem('examduration');\n        this.router.navigate(['/login']);\n      } // else{\n      //   this.presentAlert('Please retry');\n      //   console.log(JSON.stringify(err));\n      // }\n\n    }\n\n  }\n\n  CoreLogicService.ɵfac = function CoreLogicService_Factory(t) {\n    return new (t || CoreLogicService)(i0.ɵɵinject(i1.AlertController), i0.ɵɵinject(i1.LoadingController), i0.ɵɵinject(i2.Router));\n  };\n\n  CoreLogicService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CoreLogicService,\n    factory: CoreLogicService.ɵfac,\n    providedIn: 'root'\n  });\n  return CoreLogicService;\n})();","map":{"version":3,"sources":["/home/arvind/Desktop/Ionic/HRMS_PLUS/src/app/Services/core-logic.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { AlertController, LoadingController } from '@ionic/angular';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CoreLogicService {\n  isLoading = false;\n  public CurrentVestion : number;\n  constructor(private alertController: AlertController, private loadingController: LoadingController, private router:Router) { \n    this.CurrentVestion = 6;\n  }\n\n  async presentAlert(msg_Message) {\n    \n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: '',\n      subHeader: '',\n      message: msg_Message,\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n\n  Logout() {\n    /*   ALL Existing Session / Cookies Name\n      1. login_mobile --- (Login Page)\n      2. login_studcode -- (Login Page)\n      3. AppTokenKey,\n      4. enroll_id,\n      5. examduration\n    */\n\n    // localStorage.clear(); // Clear All Exitsting Session\n    localStorage.removeItem('AppTokenKey');\n    localStorage.removeItem('enroll_id');\n    localStorage.removeItem('examduration');\n    localStorage.removeItem('errorMessage');\n\n    // localStorage.removeItem('checkedoutOn');\n\n    // localStorage.removeItem('checkedinOn');\n\n    this.router.navigate(['/login']);\n  }\n  \n  async presentAlertConfirm(Message : string) {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Confirm!',\n      message: Message,\n      buttons: [\n        {\n          text: 'No',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Yes', blah)\n            \n          }\n        }, {\n          text: 'Yes',\n          handler: (res) => {\n            console.log('Yes', res)  \n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n  async presentLoading(msg_Message) {\n    // const loading = await this.loadingController.create({\n    //   cssClass: 'my-custom-class',\n    //   message: msg_Message,\n    //   duration: 10000\n    // });\n    // await loading.present();\n\n    this.isLoading = true;\n    return await this.loadingController.create({\n      duration: 10000,\n        message: msg_Message,\n    }).then(a => {\n      a.present().then(() => {\n        console.log('presented');\n        if (!this.isLoading) {\n          a.dismiss().then(() => console.log('abort presenting'));\n        }\n      });\n    });\n    \n  }\n  async dismissLoading() {\n    this.isLoading = false;\n    const loading = await this.loadingController.dismiss().then(() => console.log('dismissed'));\n    // await this.loadingController.dismiss();\n  }\n   Error(err){\n    this.dismissLoading();\n    if (err.status === 401) {\n      localStorage.removeItem('AppTokenKey');\n      localStorage.removeItem('enroll_id');\n      localStorage.removeItem('examduration');\n  \n      this.router.navigate(['/login']);\n\n    }\n    // else{\n    //   this.presentAlert('Please retry');\n    //   console.log(JSON.stringify(err));\n    // }\n  }\n\n  \n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}