{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@angular/router\";\nexport let CoreLogicService = /*#__PURE__*/(() => {\n  class CoreLogicService {\n    constructor(alertController, loadingController, router) {\n      this.alertController = alertController;\n      this.loadingController = loadingController;\n      this.router = router;\n      this.isLoading = false;\n      this.CurrentVestion = 6;\n    }\n\n    presentAlert(msg_Message) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const alert = yield this.alertController.create({\n          cssClass: 'my-custom-class',\n          header: '',\n          subHeader: '',\n          message: msg_Message,\n          buttons: ['OK']\n        });\n        yield alert.present();\n      });\n    }\n\n    Logout() {\n      /*   ALL Existing Session / Cookies Name\n        1. login_mobile --- (Login Page)\n        2. login_studcode -- (Login Page)\n        3. AppTokenKey,\n        4. enroll_id,\n        5. examduration\n      */\n      // localStorage.clear(); // Clear All Exitsting Session\n      localStorage.removeItem('AppTokenKey');\n      localStorage.removeItem('enroll_id');\n      localStorage.removeItem('examduration');\n      localStorage.removeItem('errorMessage'); // localStorage.removeItem('checkedoutOn');\n      // localStorage.removeItem('checkedinOn');\n\n      this.router.navigate(['/login']);\n    }\n\n    presentAlertConfirm(Message) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const alert = yield this.alertController.create({\n          cssClass: 'my-custom-class',\n          header: 'Confirm!',\n          message: Message,\n          buttons: [{\n            text: 'No',\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: blah => {\n              console.log('Yes', blah);\n            }\n          }, {\n            text: 'Yes',\n            handler: res => {\n              console.log('Yes', res);\n            }\n          }]\n        });\n        yield alert.present();\n      });\n    }\n\n    presentLoading(msg_Message) {\n      return __awaiter(this, void 0, void 0, function* () {\n        // const loading = await this.loadingController.create({\n        //   cssClass: 'my-custom-class',\n        //   message: msg_Message,\n        //   duration: 10000\n        // });\n        // await loading.present();\n        this.isLoading = true;\n        return yield this.loadingController.create({\n          duration: 10000,\n          message: msg_Message\n        }).then(a => {\n          a.present().then(() => {\n            console.log('presented');\n\n            if (!this.isLoading) {\n              a.dismiss().then(() => console.log('abort presenting'));\n            }\n          });\n        });\n      });\n    }\n\n    dismissLoading() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.isLoading = false;\n        const loading = yield this.loadingController.dismiss().then(() => console.log('dismissed')); // await this.loadingController.dismiss();\n      });\n    }\n\n    Error(err) {\n      this.dismissLoading();\n\n      if (err.status === 401) {\n        localStorage.removeItem('AppTokenKey');\n        localStorage.removeItem('enroll_id');\n        localStorage.removeItem('examduration');\n        this.router.navigate(['/login']);\n      } // else{\n      //   this.presentAlert('Please retry');\n      //   console.log(JSON.stringify(err));\n      // }\n\n    }\n\n  }\n\n  CoreLogicService.ɵfac = function CoreLogicService_Factory(t) {\n    return new (t || CoreLogicService)(i0.ɵɵinject(i1.AlertController), i0.ɵɵinject(i1.LoadingController), i0.ɵɵinject(i2.Router));\n  };\n\n  CoreLogicService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CoreLogicService,\n    factory: CoreLogicService.ɵfac,\n    providedIn: 'root'\n  });\n  return CoreLogicService;\n})();","map":null,"metadata":{},"sourceType":"module"}