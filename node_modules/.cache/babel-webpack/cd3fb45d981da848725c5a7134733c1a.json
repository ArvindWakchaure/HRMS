{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { IonicNativePlugin, cordova } from '@ionic-native/core';\nimport * as ɵngcc0 from '@angular/core';\n\nvar NetworkInterface = function (_super) {\n  __extends(NetworkInterface, _super);\n\n  function NetworkInterface() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  NetworkInterface.prototype.getWiFiIPAddress = function () {\n    return cordova(this, \"getWiFiIPAddress\", {}, arguments);\n  };\n\n  NetworkInterface.prototype.getCarrierIPAddress = function () {\n    return cordova(this, \"getCarrierIPAddress\", {}, arguments);\n  };\n\n  NetworkInterface.prototype.getHttpProxyInformation = function (url) {\n    return cordova(this, \"getHttpProxyInformation\", {}, arguments);\n  };\n\n  NetworkInterface.pluginName = \"NetworkInterface\";\n  NetworkInterface.plugin = \"cordova-plugin-networkinterface\";\n  NetworkInterface.pluginRef = \"networkinterface\";\n  NetworkInterface.repo = \"https://github.com/salbahra/cordova-plugin-networkinterface\";\n  NetworkInterface.platforms = [\"Android\", \"BlackBerry 10\", \"Browser\", \"iOS\", \"Windows\", \"Windows Phone\"];\n\n  NetworkInterface.ɵfac = /*@__PURE__*/function () {\n    var ɵNetworkInterface_BaseFactory;\n    return function NetworkInterface_Factory(t) {\n      return (ɵNetworkInterface_BaseFactory || (ɵNetworkInterface_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NetworkInterface)))(t || NetworkInterface);\n    };\n  }();\n\n  NetworkInterface.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NetworkInterface,\n    factory: function (t) {\n      return NetworkInterface.ɵfac(t);\n    }\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return NetworkInterface;\n}(IonicNativePlugin);\n\nexport { NetworkInterface }; //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9AaW9uaWMtbmF0aXZlL3BsdWdpbnMvbmV0d29yay1pbnRlcmZhY2Uvbmd4L2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sOEJBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0FBQ3hFO0FBSVUsSUErQjRCLG9DQUFpQjtBQUFDO0FBRTlCO0FBQzJDO0FBQU0sSUFHekUsMkNBQWdCO0FBS2lCLElBSWpDLDhDQUFtQjtBQUtpQixJQUtwQyxrREFBdUIsYUFBQyxHQUFXO0FBSUY7QUFBc0Q7QUFBaUU7QUFBcUQ7QUFBMkY7b0RBOUJ6UyxVQUFVOzs7OzBCQUNMO0FBQUMsMkJBckNQO0FBQUUsRUFxQ29DLGlCQUFpQjtBQUN0RCxTQURZLGdCQUFnQjtBQUFJIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbi8qKlxuICogQG5hbWUgTmV0d29yayBJbnRlcmZhY2VcbiAqIEBkZXNjcmlwdGlvblxuICogTmV0d29yayBpbnRlcmZhY2UgaW5mb3JtYXRpb24gcGx1Z2luIGZvciBDb3Jkb3ZhL1Bob25lR2FwIHRoYXQgc3VwcG9ydHMgQW5kcm9pZCwgQmxhY2tiZXJyeSAxMCwgQnJvd3NlciwgaU9TLCBhbmQgV2luZG93cyBQaG9uZSA4LlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgTmV0d29ya0ludGVyZmFjZSB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvbmV0d29yay1pbnRlcmZhY2Uvbmd4JztcbiAqXG4gKiBjb25zdHJ1Y3RvciggcHJpdmF0ZSBuZXR3b3JrSW50ZXJmYWNlOiBOZXR3b3JrSW50ZXJmYWNlICkge1xuICpcbiAqICAgdGhpcy5uZXR3b3JrSW50ZXJmYWNlLmdldFdpRmlJUEFkZHJlc3MoKVxuICogICAgIC50aGVuKGFkZHJlc3MgPT4gY29uc29sZS5pbmZvKGBJUDogJHthZGRyZXNzLmlwfSwgU3VibmV0OiAke2FkZHJlc3Muc3VibmV0fWApKVxuICogICAgIC5jYXRjaChlcnJvciA9PiBjb25zb2xlLmVycm9yKGBVbmFibGUgdG8gZ2V0IElQOiAke2Vycm9yfWApKTtcbiAqXG4gKiAgIHRoaXMubmV0d29ya0ludGVyZmFjZS5nZXRDYXJyaWVySVBBZGRyZXNzKClcbiAqICAgICAudGhlbihhZGRyZXNzID0+IGNvbnNvbGUuaW5mbyhgSVA6ICR7YWRkcmVzcy5pcH0sIFN1Ym5ldDogJHthZGRyZXNzLnN1Ym5ldH1gKSlcbiAqICAgICAuY2F0Y2goZXJyb3IgPT4gY29uc29sZS5lcnJvcihgVW5hYmxlIHRvIGdldCBJUDogJHtlcnJvcn1gKSk7XG4gKlxuICogICBjb25zdCB1cmwgPSAnd3d3LmdpdGh1Yi5jb20nO1xuICogICB0aGlzLm5ldHdvcmtJbnRlcmZhY2UuZ2V0SHR0cFByb3h5SW5mb3JtYXRpb24odXJsKVxuICogICAgIC50aGVuKHByb3h5ID0+IGNvbnNvbGUuaW5mbyhgVHlwZTogJHtwcm94eS50eXBlfSwgSG9zdDogJHtwcm94eS5ob3N0fSwgUG9ydDogJHtwcm94eS5wb3J0fWApKVxuICogICAgIC5jYXRjaChlcnJvciA9PiBjb25zb2xlLmVycm9yKGBVbmFibGUgdG8gZ2V0IHByb3h5IGluZm86ICR7ZXJyb3J9YCkpO1xuICogfVxuICogYGBgXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnTmV0d29ya0ludGVyZmFjZScsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLW5ldHdvcmtpbnRlcmZhY2UnLFxuICBwbHVnaW5SZWY6ICduZXR3b3JraW50ZXJmYWNlJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9zYWxiYWhyYS9jb3Jkb3ZhLXBsdWdpbi1uZXR3b3JraW50ZXJmYWNlJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnQmxhY2tCZXJyeSAxMCcsICdCcm93c2VyJywgJ2lPUycsICdXaW5kb3dzJywgJ1dpbmRvd3MgUGhvbmUnXSxcbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgTmV0d29ya0ludGVyZmFjZSBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcbiAgLyoqXG4gICAqIEdldHMgdGhlIFdpRmkgSVAgYWRkcmVzc1xuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBQcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCB0aGUgSVAgYWRkcmVzcyBpbmZvcm1hdGlvbi5cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZ2V0V2lGaUlQQWRkcmVzcygpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXRzIHRoZSB3aXJlbGVzcyBjYXJyaWVyIElQIGFkZHJlc3NcbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgUHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggdGhlIElQIGFkZHJlc3MgaW5mb3JtYXRpb24uXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGdldENhcnJpZXJJUEFkZHJlc3MoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogR2V0cyB0aGUgcmVsZXZhbnQgcHJveGllcyBmb3IgdGhlIHBhc3NlZCBVUkwgaW4gb3JkZXIgb2YgYXBwbGljYXRpb25cbiAgICogQHBhcmFtIHt1cmx9IG1lc3NhZ2UgIFRoZSBtZXNzYWdlIHRvIGRpc3BsYXkuXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIFByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIHRoZSBwcm94eSBpbmZvcm1hdGlvbi5cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZ2V0SHR0cFByb3h5SW5mb3JtYXRpb24odXJsOiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxufVxuIl19","map":{"version":3,"sources":["/home/arvind/Desktop/Ionic/HRMS_PLUS/node_modules/@ionic-native/network-interface/__ivy_ngcc__/ngx/index.js"],"names":["__extends","Injectable","IonicNativePlugin","cordova","ɵngcc0","NetworkInterface","_super","apply","arguments","prototype","getWiFiIPAddress","getCarrierIPAddress","getHttpProxyInformation","url","pluginName","plugin","pluginRef","repo","platforms","ɵfac","ɵNetworkInterface_BaseFactory","NetworkInterface_Factory","t","ɵɵgetInheritedFactory","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,iBAAT,EAA4BC,OAA5B,QAA2C,oBAA3C;AACA,OAAO,KAAKC,MAAZ,MAAwB,eAAxB;;AACA,IAAIC,gBAAgB,GAAkB,UAAUC,MAAV,EAAkB;AACpDN,EAAAA,SAAS,CAACK,gBAAD,EAAmBC,MAAnB,CAAT;;AACA,WAASD,gBAAT,GAA4B;AACxB,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDH,EAAAA,gBAAgB,CAACI,SAAjB,CAA2BC,gBAA3B,GAA8C,YAAY;AAAE,WAAOP,OAAO,CAAC,IAAD,EAAO,kBAAP,EAA2B,EAA3B,EAA+BK,SAA/B,CAAd;AAA0D,GAAtH;;AACAH,EAAAA,gBAAgB,CAACI,SAAjB,CAA2BE,mBAA3B,GAAiD,YAAY;AAAE,WAAOR,OAAO,CAAC,IAAD,EAAO,qBAAP,EAA8B,EAA9B,EAAkCK,SAAlC,CAAd;AAA6D,GAA5H;;AACAH,EAAAA,gBAAgB,CAACI,SAAjB,CAA2BG,uBAA3B,GAAqD,UAAUC,GAAV,EAAe;AAAE,WAAOV,OAAO,CAAC,IAAD,EAAO,yBAAP,EAAkC,EAAlC,EAAsCK,SAAtC,CAAd;AAAiE,GAAvI;;AACAH,EAAAA,gBAAgB,CAACS,UAAjB,GAA8B,kBAA9B;AACAT,EAAAA,gBAAgB,CAACU,MAAjB,GAA0B,iCAA1B;AACAV,EAAAA,gBAAgB,CAACW,SAAjB,GAA6B,kBAA7B;AACAX,EAAAA,gBAAgB,CAACY,IAAjB,GAAwB,6DAAxB;AACAZ,EAAAA,gBAAgB,CAACa,SAAjB,GAA6B,CAAC,SAAD,EAAY,eAAZ,EAA6B,SAA7B,EAAwC,KAAxC,EAA+C,SAA/C,EAA0D,eAA1D,CAA7B;;AACJb,EAAAA,gBAAgB,CAACc,IAAjB,GAAwB,aAAc,YAAY;AAAE,QAAIC,6BAAJ;AAAmC,WAAO,SAASC,wBAAT,CAAkCC,CAAlC,EAAqC;AAAE,aAAO,CAACF,6BAA6B,KAAKA,6BAA6B,GAAGhB,MAAM,CAACmB,qBAAP,CAA6BlB,gBAA7B,CAArC,CAA9B,EAAoHiB,CAAC,IAAIjB,gBAAzH,CAAP;AAAoJ,KAAlM;AAAqM,GAAtP,EAAtC;;AACAA,EAAAA,gBAAgB,CAACmB,KAAjB,GAAyB,aAAcpB,MAAM,CAACqB,kBAAP,CAA0B;AAAEC,IAAAA,KAAK,EAAErB,gBAAT;AAA2BsB,IAAAA,OAAO,EAAE,UAAUL,CAAV,EAAa;AAAE,aAAOjB,gBAAgB,CAACc,IAAjB,CAAsBG,CAAtB,CAAP;AAAkC;AAArF,GAA1B,CAAvC;;AACA,GAAC,YAAY;AAAE,KAAC,OAAOM,SAAP,KAAqB,WAArB,IAAoCA,SAArC;AAEO,GAFtB;;AAGI,SAAOvB,gBAAP;AACH,CAnBqC,CAmBpCH,iBAnBoC,CAAtC;;AAoBA,SAASG,gBAAT,G,CAEA","sourcesContent":["import { __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { IonicNativePlugin, cordova } from '@ionic-native/core';\nimport * as ɵngcc0 from '@angular/core';\nvar NetworkInterface = /** @class */ (function (_super) {\n    __extends(NetworkInterface, _super);\n    function NetworkInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NetworkInterface.prototype.getWiFiIPAddress = function () { return cordova(this, \"getWiFiIPAddress\", {}, arguments); };\n    NetworkInterface.prototype.getCarrierIPAddress = function () { return cordova(this, \"getCarrierIPAddress\", {}, arguments); };\n    NetworkInterface.prototype.getHttpProxyInformation = function (url) { return cordova(this, \"getHttpProxyInformation\", {}, arguments); };\n    NetworkInterface.pluginName = \"NetworkInterface\";\n    NetworkInterface.plugin = \"cordova-plugin-networkinterface\";\n    NetworkInterface.pluginRef = \"networkinterface\";\n    NetworkInterface.repo = \"https://github.com/salbahra/cordova-plugin-networkinterface\";\n    NetworkInterface.platforms = [\"Android\", \"BlackBerry 10\", \"Browser\", \"iOS\", \"Windows\", \"Windows Phone\"];\nNetworkInterface.ɵfac = /*@__PURE__*/ function () { var ɵNetworkInterface_BaseFactory; return function NetworkInterface_Factory(t) { return (ɵNetworkInterface_BaseFactory || (ɵNetworkInterface_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NetworkInterface)))(t || NetworkInterface); }; }();\nNetworkInterface.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: NetworkInterface, factory: function (t) { return NetworkInterface.ɵfac(t); } });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NetworkInterface, [{\n        type: Injectable\n    }], null, null); })();\n    return NetworkInterface;\n}(IonicNativePlugin));\nexport { NetworkInterface };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9AaW9uaWMtbmF0aXZlL3BsdWdpbnMvbmV0d29yay1pbnRlcmZhY2Uvbmd4L2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sOEJBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0FBQ3hFO0FBSVUsSUErQjRCLG9DQUFpQjtBQUFDO0FBRTlCO0FBQzJDO0FBQU0sSUFHekUsMkNBQWdCO0FBS2lCLElBSWpDLDhDQUFtQjtBQUtpQixJQUtwQyxrREFBdUIsYUFBQyxHQUFXO0FBSUY7QUFBc0Q7QUFBaUU7QUFBcUQ7QUFBMkY7b0RBOUJ6UyxVQUFVOzs7OzBCQUNMO0FBQUMsMkJBckNQO0FBQUUsRUFxQ29DLGlCQUFpQjtBQUN0RCxTQURZLGdCQUFnQjtBQUFJIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbi8qKlxuICogQG5hbWUgTmV0d29yayBJbnRlcmZhY2VcbiAqIEBkZXNjcmlwdGlvblxuICogTmV0d29yayBpbnRlcmZhY2UgaW5mb3JtYXRpb24gcGx1Z2luIGZvciBDb3Jkb3ZhL1Bob25lR2FwIHRoYXQgc3VwcG9ydHMgQW5kcm9pZCwgQmxhY2tiZXJyeSAxMCwgQnJvd3NlciwgaU9TLCBhbmQgV2luZG93cyBQaG9uZSA4LlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgTmV0d29ya0ludGVyZmFjZSB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvbmV0d29yay1pbnRlcmZhY2Uvbmd4JztcbiAqXG4gKiBjb25zdHJ1Y3RvciggcHJpdmF0ZSBuZXR3b3JrSW50ZXJmYWNlOiBOZXR3b3JrSW50ZXJmYWNlICkge1xuICpcbiAqICAgdGhpcy5uZXR3b3JrSW50ZXJmYWNlLmdldFdpRmlJUEFkZHJlc3MoKVxuICogICAgIC50aGVuKGFkZHJlc3MgPT4gY29uc29sZS5pbmZvKGBJUDogJHthZGRyZXNzLmlwfSwgU3VibmV0OiAke2FkZHJlc3Muc3VibmV0fWApKVxuICogICAgIC5jYXRjaChlcnJvciA9PiBjb25zb2xlLmVycm9yKGBVbmFibGUgdG8gZ2V0IElQOiAke2Vycm9yfWApKTtcbiAqXG4gKiAgIHRoaXMubmV0d29ya0ludGVyZmFjZS5nZXRDYXJyaWVySVBBZGRyZXNzKClcbiAqICAgICAudGhlbihhZGRyZXNzID0+IGNvbnNvbGUuaW5mbyhgSVA6ICR7YWRkcmVzcy5pcH0sIFN1Ym5ldDogJHthZGRyZXNzLnN1Ym5ldH1gKSlcbiAqICAgICAuY2F0Y2goZXJyb3IgPT4gY29uc29sZS5lcnJvcihgVW5hYmxlIHRvIGdldCBJUDogJHtlcnJvcn1gKSk7XG4gKlxuICogICBjb25zdCB1cmwgPSAnd3d3LmdpdGh1Yi5jb20nO1xuICogICB0aGlzLm5ldHdvcmtJbnRlcmZhY2UuZ2V0SHR0cFByb3h5SW5mb3JtYXRpb24odXJsKVxuICogICAgIC50aGVuKHByb3h5ID0+IGNvbnNvbGUuaW5mbyhgVHlwZTogJHtwcm94eS50eXBlfSwgSG9zdDogJHtwcm94eS5ob3N0fSwgUG9ydDogJHtwcm94eS5wb3J0fWApKVxuICogICAgIC5jYXRjaChlcnJvciA9PiBjb25zb2xlLmVycm9yKGBVbmFibGUgdG8gZ2V0IHByb3h5IGluZm86ICR7ZXJyb3J9YCkpO1xuICogfVxuICogYGBgXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnTmV0d29ya0ludGVyZmFjZScsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLW5ldHdvcmtpbnRlcmZhY2UnLFxuICBwbHVnaW5SZWY6ICduZXR3b3JraW50ZXJmYWNlJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9zYWxiYWhyYS9jb3Jkb3ZhLXBsdWdpbi1uZXR3b3JraW50ZXJmYWNlJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnQmxhY2tCZXJyeSAxMCcsICdCcm93c2VyJywgJ2lPUycsICdXaW5kb3dzJywgJ1dpbmRvd3MgUGhvbmUnXSxcbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgTmV0d29ya0ludGVyZmFjZSBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcbiAgLyoqXG4gICAqIEdldHMgdGhlIFdpRmkgSVAgYWRkcmVzc1xuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBQcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCB0aGUgSVAgYWRkcmVzcyBpbmZvcm1hdGlvbi5cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZ2V0V2lGaUlQQWRkcmVzcygpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXRzIHRoZSB3aXJlbGVzcyBjYXJyaWVyIElQIGFkZHJlc3NcbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgUHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggdGhlIElQIGFkZHJlc3MgaW5mb3JtYXRpb24uXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGdldENhcnJpZXJJUEFkZHJlc3MoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogR2V0cyB0aGUgcmVsZXZhbnQgcHJveGllcyBmb3IgdGhlIHBhc3NlZCBVUkwgaW4gb3JkZXIgb2YgYXBwbGljYXRpb25cbiAgICogQHBhcmFtIHt1cmx9IG1lc3NhZ2UgIFRoZSBtZXNzYWdlIHRvIGRpc3BsYXkuXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIFByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIHRoZSBwcm94eSBpbmZvcm1hdGlvbi5cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZ2V0SHR0cFByb3h5SW5mb3JtYXRpb24odXJsOiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxufVxuIl19"]},"metadata":{},"sourceType":"module"}